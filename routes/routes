// Load the MySQL pool connection


// Route the app
const router = app => {
    
    app.post('/api/v1/parse', (request, response) => {
        const regex = /^(\w+0{3,4})(\w+0{3,4})(\d+)$/gm;
        const str = request.body.data;
        let m;
        
        while ((m = regex.exec(str)) !== null) {
            // This is necessary to avoid infinite loops with zero-width matches
            if (m.index === regex.lastIndex) {
                regex.lastIndex++;
            }
            
            var jsonResult = {};
             var array = null;
            // The result can be accessed through the `m`-variable.
            m.forEach((match, groupIndex) => {
                console.log(`Found match, group ${groupIndex}: ${match}`);
                
            }); 
           
                jsonResult = {
                    "statusCode": 200,
                    "data": {
                        "firstName":m[1],
                        "lastName":m[2],
                        "clientId":m[3],
                    }
                }
           
        }
        response.send(jsonResult);

       //^(\w+0{3,4})(\w+0{3,4})(\d+)$
    });
    

    app.post('/api/v2/parse', (request, response) => {
       const regex = /^(\w+)0{4}(\w+)0{3,4}(\d+)$/gm;
        const str = request.body.data;
        let m;
        
        while ((m = regex.exec(str)) !== null) {
            // This is necessary to avoid infinite loops with zero-width matches
            if (m.index === regex.lastIndex) {
                regex.lastIndex++;
            }
            
            var jsonResult = {};
             var array = null;
            // The result can be accessed through the `m`-variable.
            m.forEach((match, groupIndex) => {
                console.log(`Found match, group ${groupIndex}: ${match}`);
                
            }); 
           
                jsonResult = {
                    "statusCode": 200,
                    "data": {
                        "firstName":m[1],
                        "lastName":m[2],
                        "clientId":m[3],
                    }
                }
           
        }
        response.send(jsonResult);
      
    });
}

// Export the router
module.exports = router;
